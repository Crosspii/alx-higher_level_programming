#!/usr/bin/python3
"""Unittest for max_integer([..])
"""
import unittest
from 6-max_integer import max_integer  # Import the function

class TestMaxInteger(unittest.TestCase):
    """Test cases for the max_integer function."""

    def test_regular_numbers(self):
        self.assertEqual(max_integer([1, 2, 3, 4]), 4)
        self.assertEqual(max_integer([1, 3, 4, 2]), 4)
        self.assertEqual(max_integer([-1, -2, -3, -4]), -1)

    def test_empty_list(self):
        self.assertIsNone(max_integer([]))

    def test_single_element(self):
        self.assertEqual(max_integer([42]), 42)
        self.assertEqual(max_integer([-5]), -5)

    def test_floats(self):
        self.assertEqual(max_integer([1.1, 2.2, 3.3, 4.4]), 4.4)
        self.assertEqual(max_integer([1.1, 2.2, 0.0, -1.1]), 2.2)

    def test_mixed_types(self):
        with self.assertRaises(TypeError):
            max_integer([1, "two", 3])  # This should raise an error

    def test_repeated_numbers(self):
        self.assertEqual(max_integer([5, 5, 5]), 5)
        self.assertEqual(max_integer([1, 1, 1, 2]), 2)

if __name__ == '__main__':
    unittest.main()
